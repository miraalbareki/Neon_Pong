worker_processes 1;
events { worker_connections 1024; }

http {
    # FORCE JAVASCRIPT MIME TYPE - NO EXCEPTIONS
    types {
        application/javascript js;
        text/html html htm shtml;
        text/css css;
        image/png png;
        image/jpeg jpeg jpg;
        image/gif gif;
        image/svg+xml svg;
        application/json json;
    }
    
    default_type application/octet-stream;
    server_tokens off;

    # Redirect HTTP â†’ HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/nginx/certs/localhost.crt;
        ssl_certificate_key /etc/nginx/certs/localhost.key;

        # Serve frontend build
        root /usr/share/nginx/html;
        index index.html;

        # FRONTEND ROUTES FIRST - HIGHEST PRIORITY
        location = /tournament {
            add_header X-Served-By "nginx-frontend" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            try_files $uri /index.html;
        }
        
        location = /tournament/ {
            add_header X-Served-By "nginx-frontend" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            try_files $uri /index.html;
        }
        
        location = /login {
            add_header X-Served-By "nginx-frontend" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            try_files $uri /index.html;
        }
        
        location = /register {
            add_header X-Served-By "nginx-frontend" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            try_files $uri /index.html;
        }

        # Specific backend API endpoints 
        # Note: /tournament is a frontend route, only /tournament/join is a backend API
        location ~ ^/(me|logout|set-alias|search-friends|add-friends|list-friends|friends|friends-status|friend|uploads|users|ai|onevone)($|/) {
            proxy_pass http://backend:5001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Backend API endpoints for tournaments (plural only)
        location ~ ^/tournaments($|/) {
            proxy_pass http://backend:5001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Specific backend API endpoint for tournament join
        location /tournament/join {
            proxy_pass http://backend:5001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Backend API endpoints for login/register POST requests handled by /api/ prefix

        # Proxy backend API with /api/ prefix
        location /api/ {
            proxy_pass http://backend:5001/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy auth API to backend (auth integrated into backend)
        location /auth/ {
            proxy_pass http://backend:5001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Frontend routes already handled above

        # NUCLEAR OPTION - FORCE ALL JS FILES
        location ~ \.js$ {
            add_header Content-Type "application/javascript" always;
            try_files $uri =404;
        }
        
        location / {
            try_files $uri /index.html;
        }
    }
}
